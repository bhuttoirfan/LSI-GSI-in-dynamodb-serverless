{
  "service": {
    "service": "serveless-and-dynamodb-queries",
    "serviceObject": {
      "name": "serveless-and-dynamodb-queries"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs14.x",
      "apiGateway": {
        "minimumCompressionSize": 1024,
        "shouldStartNameWithService": true
      },
      "environment": {
        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
        "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000"
      },
      "lambdaHashingVersion": "20201221",
      "stage": "dev",
      "region": "us-east-1",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "PostUnderscoredataLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serveless-and-dynamodb-queries-dev-post_data"
            }
          },
          "GetUnderscoredataLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serveless-and-dynamodb-queries-dev-get_data"
            }
          },
          "DeleteUnderscoredataLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serveless-and-dynamodb-queries-dev-delete_data"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "serveless-and-dynamodb-queries",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serveless-and-dynamodb-queries-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serveless-and-dynamodb-queries-dev*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "serveless-and-dynamodb-queries",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "PostUnderscoredataLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serveless-and-dynamodb-queries/dev/1637223534019-2021-11-18T08:18:54.019Z/serveless-and-dynamodb-queries-dev-post_data.zip"
              },
              "Handler": "src/functions/post data/handler.main",
              "Runtime": "nodejs14.x",
              "FunctionName": "serveless-and-dynamodb-queries-dev-post_data",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                  "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "PostUnderscoredataLogGroup"
            ]
          },
          "GetUnderscoredataLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serveless-and-dynamodb-queries/dev/1637223534019-2021-11-18T08:18:54.019Z/serveless-and-dynamodb-queries-dev-get_data.zip"
              },
              "Handler": "src/functions/get data/handler.main",
              "Runtime": "nodejs14.x",
              "FunctionName": "serveless-and-dynamodb-queries-dev-get_data",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                  "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetUnderscoredataLogGroup"
            ]
          },
          "DeleteUnderscoredataLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serveless-and-dynamodb-queries/dev/1637223534019-2021-11-18T08:18:54.019Z/serveless-and-dynamodb-queries-dev-delete_data.zip"
              },
              "Handler": "src/functions/delete data/handler.main",
              "Runtime": "nodejs14.x",
              "FunctionName": "serveless-and-dynamodb-queries-dev-delete_data",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                  "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "DeleteUnderscoredataLogGroup"
            ]
          },
          "PostUnderscoredataLambdaVersionA4ZRhJrPvZu1bWMrToIofmrdtDmuR7Ej1OdeUvCD4U": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PostUnderscoredataLambdaFunction"
              },
              "CodeSha256": "nDm4wC7U+kirPJ7fIu9WptXy2mII/qUoHrFZ/ziLuw8="
            }
          },
          "GetUnderscoredataLambdaVersionTICLarjOzrJZmly4vdEt4to2U588rH73hYuAWl8": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetUnderscoredataLambdaFunction"
              },
              "CodeSha256": "U4ey4hqCR7OQOFBiBsdJfANiUIPrzaqtI7wp+2R5iN8="
            }
          },
          "DeleteUnderscoredataLambdaVersionq7s5Nhj2x4KyCNEklfzcTYSXOAed0qsnqTpK6RIA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DeleteUnderscoredataLambdaFunction"
              },
              "CodeSha256": "HX4ONZklN6cbgmipn3vZ501zu0bn8rTbuM0EA3RdRqQ="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "serveless-and-dynamodb-queries-dev",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": "",
              "MinimumCompressionSize": 1024
            }
          },
          "ApiGatewayResourceAdddata": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "addData",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceGetdata": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "getData",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceDeletedata": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "deleteData",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodAdddataPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceAdddata"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "PostUnderscoredataLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "ApiGatewayServelessanddynamodbqueriesRequestValidator"
              },
              "RequestModels": {
                "application/json": {
                  "Ref": "ApiGatewayMethodAdddataPostApplicationJsonModel"
                }
              }
            },
            "DependsOn": [
              "PostUnderscoredataLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodGetdataPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceGetdata"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetUnderscoredataLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "ApiGatewayServelessanddynamodbqueriesRequestValidator"
              },
              "RequestModels": {
                "application/json": {
                  "Ref": "ApiGatewayMethodGetdataPostApplicationJsonModel"
                }
              }
            },
            "DependsOn": [
              "GetUnderscoredataLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodDeletedataDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceDeletedata"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "DeleteUnderscoredataLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "ApiGatewayServelessanddynamodbqueriesRequestValidator"
              },
              "RequestModels": {
                "application/json": {
                  "Ref": "ApiGatewayMethodDeletedataDeleteApplicationJsonModel"
                }
              }
            },
            "DependsOn": [
              "DeleteUnderscoredataLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayServelessanddynamodbqueriesRequestValidator": {
            "Type": "AWS::ApiGateway::RequestValidator",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ValidateRequestBody": true,
              "ValidateRequestParameters": true,
              "Name": "serveless-and-dynamodb-queries-dev | Validate request body and querystring parameters"
            }
          },
          "ApiGatewayMethodAdddataPostApplicationJsonModel": {
            "Type": "AWS::ApiGateway::Model",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ContentType": "application/json",
              "Schema": {
                "type": "object",
                "properties": {
                  "actor": {
                    "type": "string"
                  },
                  "movie": {
                    "type": "string"
                  },
                  "role": {
                    "type": "string"
                  },
                  "year": {
                    "type": "string"
                  },
                  "genre": {
                    "type": "string"
                  }
                },
                "required": [
                  "actor",
                  "movie",
                  "role"
                ]
              }
            }
          },
          "ApiGatewayMethodGetdataPostApplicationJsonModel": {
            "Type": "AWS::ApiGateway::Model",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ContentType": "application/json",
              "Schema": {
                "type": "object",
                "properties": {
                  "actor": {
                    "type": "string"
                  },
                  "movie": {
                    "type": "string"
                  }
                },
                "required": [
                  "actor",
                  "movie"
                ]
              }
            }
          },
          "ApiGatewayMethodDeletedataDeleteApplicationJsonModel": {
            "Type": "AWS::ApiGateway::Model",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ContentType": "application/json",
              "Schema": {
                "type": "object",
                "properties": {
                  "actor": {
                    "type": "string"
                  },
                  "movie": {
                    "type": "string"
                  }
                },
                "required": [
                  "actor",
                  "movie"
                ]
              }
            }
          },
          "ApiGatewayDeployment1637223530504": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodAdddataPost",
              "ApiGatewayMethodGetdataPost",
              "ApiGatewayMethodDeletedataDelete"
            ]
          },
          "PostUnderscoredataLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PostUnderscoredataLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GetUnderscoredataLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetUnderscoredataLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "DeleteUnderscoredataLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DeleteUnderscoredataLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "mediaTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "Media-Table",
              "AttributeDefinitions": [
                {
                  "AttributeName": "actor",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "movie",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "genre",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "year",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "actor",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "movie",
                  "KeyType": "RANGE"
                }
              ],
              "GlobalSecondaryIndexes": [
                {
                  "IndexName": "GenreYearIndex",
                  "KeySchema": [
                    {
                      "AttributeName": "genre",
                      "KeyType": "HASH"
                    },
                    {
                      "AttributeName": "year",
                      "KeyType": "RANGE"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                }
              ],
              "LocalSecondaryIndexes": [
                {
                  "IndexName": "YearIndex",
                  "KeySchema": [
                    {
                      "AttributeName": "actor",
                      "KeyType": "HASH"
                    },
                    {
                      "AttributeName": "year",
                      "KeyType": "RANGE"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-serveless-and-dynamodb-queries-dev-ServerlessDeploymentBucketName"
            }
          },
          "PostUnderscoredataLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PostUnderscoredataLambdaVersionA4ZRhJrPvZu1bWMrToIofmrdtDmuR7Ej1OdeUvCD4U"
            },
            "Export": {
              "Name": "sls-serveless-and-dynamodb-queries-dev-PostUnderscoredataLambdaFunctionQualifiedArn"
            }
          },
          "GetUnderscoredataLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetUnderscoredataLambdaVersionTICLarjOzrJZmly4vdEt4to2U588rH73hYuAWl8"
            },
            "Export": {
              "Name": "sls-serveless-and-dynamodb-queries-dev-GetUnderscoredataLambdaFunctionQualifiedArn"
            }
          },
          "DeleteUnderscoredataLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DeleteUnderscoredataLambdaVersionq7s5Nhj2x4KyCNEklfzcTYSXOAed0qsnqTpK6RIA"
            },
            "Export": {
              "Name": "sls-serveless-and-dynamodb-queries-dev-DeleteUnderscoredataLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-serveless-and-dynamodb-queries-dev-ServiceEndpoint"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "dynamodb": {
        "stages": [
          "dev"
        ],
        "start": {
          "port": 8000,
          "migrate": true,
          "seed": true
        }
      },
      "esbuild": {
        "bundle": true,
        "minify": false,
        "sourcemap": true,
        "exclude": [
          "aws-sdk"
        ],
        "target": "node14",
        "define": {},
        "platform": "node",
        "concurrency": 10
      }
    },
    "plugins": [
      "serverless-esbuild",
      "serverless-offline",
      "serverless-dynamodb-local"
    ],
    "pluginsData": {},
    "functions": {
      "post_data": {
        "handler": "src/functions/post data/handler.main",
        "events": [
          {
            "http": {
              "method": "post",
              "path": "addData",
              "request": {
                "schema": {
                  "application/json": {
                    "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ApiGatewayMethodAdddataPostApplicationJsonModel\"][\"Properties\"][\"Schema\"]"
                  }
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "serveless-and-dynamodb-queries-dev-post_data",
        "package": {
          "artifact": "C:\\Users\\Meeting room 1\\Desktop\\Serverless\\Serveless and dynamodb queries\\.serverless\\serveless-and-dynamodb-queries-dev-post_data.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "PostUnderscoredataLambdaVersionA4ZRhJrPvZu1bWMrToIofmrdtDmuR7Ej1OdeUvCD4U"
      },
      "get_data": {
        "handler": "src/functions/get data/handler.main",
        "events": [
          {
            "http": {
              "method": "post",
              "path": "getData",
              "request": {
                "schema": {
                  "application/json": {
                    "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ApiGatewayMethodGetdataPostApplicationJsonModel\"][\"Properties\"][\"Schema\"]"
                  }
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "serveless-and-dynamodb-queries-dev-get_data",
        "package": {
          "artifact": "C:\\Users\\Meeting room 1\\Desktop\\Serverless\\Serveless and dynamodb queries\\.serverless\\serveless-and-dynamodb-queries-dev-get_data.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "GetUnderscoredataLambdaVersionTICLarjOzrJZmly4vdEt4to2U588rH73hYuAWl8"
      },
      "delete_data": {
        "handler": "src/functions/delete data/handler.main",
        "events": [
          {
            "http": {
              "method": "delete",
              "path": "deleteData",
              "request": {
                "schema": {
                  "application/json": {
                    "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ApiGatewayMethodDeletedataDeleteApplicationJsonModel\"][\"Properties\"][\"Schema\"]"
                  }
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "serveless-and-dynamodb-queries-dev-delete_data",
        "package": {
          "artifact": "C:\\Users\\Meeting room 1\\Desktop\\Serverless\\Serveless and dynamodb queries\\.serverless\\serveless-and-dynamodb-queries-dev-delete_data.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "DeleteUnderscoredataLambdaVersionq7s5Nhj2x4KyCNEklfzcTYSXOAed0qsnqTpK6RIA"
      }
    },
    "resources": {
      "Resources": {
        "mediaTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "Media-Table",
            "AttributeDefinitions": [
              {
                "AttributeName": "actor",
                "AttributeType": "S"
              },
              {
                "AttributeName": "movie",
                "AttributeType": "S"
              },
              {
                "AttributeName": "genre",
                "AttributeType": "S"
              },
              {
                "AttributeName": "year",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "actor",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "movie",
                "KeyType": "RANGE"
              }
            ],
            "GlobalSecondaryIndexes": [
              {
                "IndexName": "GenreYearIndex",
                "KeySchema": [
                  {
                    "AttributeName": "genre",
                    "KeyType": "HASH"
                  },
                  {
                    "AttributeName": "year",
                    "KeyType": "RANGE"
                  }
                ],
                "Projection": {
                  "ProjectionType": "ALL"
                }
              }
            ],
            "LocalSecondaryIndexes": [
              {
                "IndexName": "YearIndex",
                "KeySchema": [
                  {
                    "AttributeName": "actor",
                    "KeyType": "HASH"
                  },
                  {
                    "AttributeName": "year",
                    "KeyType": "RANGE"
                  }
                ],
                "Projection": {
                  "ProjectionType": "ALL"
                }
              }
            ],
            "BillingMode": "PAY_PER_REQUEST"
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.ts",
    "initialServerlessConfig": {
      "service": {
        "$ref": "$[\"service\"][\"serviceObject\"]"
      },
      "frameworkVersion": "2",
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "package": {
        "individually": true
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false
  },
  "package": {
    "individually": true,
    "artifactDirectoryName": "serverless/serveless-and-dynamodb-queries/dev/1637223534019-2021-11-18T08:18:54.019Z",
    "artifact": ""
  }
}